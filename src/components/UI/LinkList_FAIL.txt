// src/components/UI/LinkList.tsx

import React, { useState } from 'react';
import { Save, Trash2 } from 'react-feather';
import styles from '../../styles/LinkList.module.scss';
import { useLibraryCtx } from '../../contexts/LibraryCtx';

type Item = {
  name: string;
  id: string;
  slug: string;
};

type ListProps = {
  items: Item[];
  title: string;
  itemsPerPage?: number;
  onDelete: (id: string) => void;
  onSave: (id: string) => void;
};

export default function LinkList({
  items,
  title,
  itemsPerPage = 10,
  onDelete,
  onSave,
}: ListProps) {
  const [currentPage, setCurrentPage] = useState(1);
  const { selectedSamples, toggleSample } = useLibraryCtx();

  const totalPages = Math.ceil(items.length / itemsPerPage);
  const startIndex = (currentPage - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  const currentItems = items.slice(startIndex, endIndex);

  const handleClick = (itemId: string) => {
    toggleSample(itemId);
  };

  const handlePrevPage = () => {
    setCurrentPage((prev) => (prev === 1 ? totalPages : prev - 1));
  };

  const handleNextPage = () => {
    setCurrentPage((prev) => (prev === totalPages ? 1 : prev + 1));
  };

  return (
    <section className={styles.linkList}>
      {currentItems.map((item) => (
        <div key={item.id} className={styles.itemContainer}>
          <button
            className={`${styles.item} ${
              selectedSamples.includes(item.id) ? styles.selected : ''
            }`}
            onClick={() => handleClick(item.id)}
          >
            {item.name}
          </button>
          <div className={styles.buttons}>
            <button
              onClick={() => onSave(item.id)}
              className={styles.saveButton}
            >
              <Save size={16} className={styles.saveIcon} />
            </button>
            <button
              onClick={() => onDelete(item.id)}
              className={styles.deleteButton}
            >
              <Trash2 size={16} className={styles.deleteIcon} />
            </button>
          </div>
        </div>
      ))}
      <div className={styles.pagination}>
        <button onClick={handlePrevPage}>{'<'}</button>
        <span>{`${currentPage} / ${totalPages}`}</span>
        <button onClick={handleNextPage}>{'>'}</button>
      </div>
    </section>
  );
}
