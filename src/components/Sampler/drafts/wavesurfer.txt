
  const waveContainerRef = useRef(null);
  const wavesurferRef = useRef(null);
  let isMobile = null;

  function initWavesurfer(sampleUrl: string) {
    if (waveContainerRef.current && !wavesurferRef.current) {
      wavesurferRef.current = WaveSurfer.create({
        container: waveContainerRef.current,
        waveColor: 'rgb(200, 0, 200)',
        progressColor: 'rgb(100, 0, 100)',
        // media: audioElementRef.current,
        url: sampleUrl || '',
      });

      wavesurferRef.current.on('play', () => {
        wavesurferRef.current.setVolume(0); // Start with zero volume
        wavesurferRef.current.fadeIn(200); // Fade in over 200 milliseconds
      });

      wavesurferRef.current.on('pause', () => {
        wavesurferRef.current.fadeOut(200); // Fade out over 200 milliseconds before pausing
      });

      // initEnvelope();
    }
  }

  function initEnvelope() {
    isMobile = top.matchMedia('(max-width: 900px)').matches;
    const envelope = wavesurferRef.current.registerPlugin(
      EnvelopePlugin.create({
        volume: 0.8,
        lineColor: 'rgba(255, 0, 0, 0.5)',
        lineWidth: 4,
        dragPointSize: isMobile ? 20 : 12,
        dragLine: !isMobile,
        dragPointFill: 'rgba(0, 255, 255, 0.8)',
        dragPointStroke: 'rgba(0, 0, 0, 0.5)',

        points: [
          { time: 0.0, volume: 0.0 },
          { time: 0.2, volume: 1.0 },
          { time: 1.0, volume: 0.5 },
          { time: 2.0, volume: 0.0 },
        ],
      })
    );
    envelope.on('points-change', (points) => {
      console.log('Envelope points changed', points);
    });

    envelope.addPoint({ time: 1, volume: 0.9 });
  }