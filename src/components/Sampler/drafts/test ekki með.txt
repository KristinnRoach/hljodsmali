// import React, { useState } from 'react';
// import * as Tone from 'tone'; // velja það sem ég nota
// import { PitchDetector } from 'pitchy';

// Tone.Transport.bpm.value = 140;

// const synth = new Tone.PolySynth().toDestination();

// const interval = 0.05;

// const simple = (time, pitch) => {
//   synth.triggerAttackRelease(pitch, '8n', time);
// };

// const strum = (time, pitch) => {
//   const pitches = ([pitch] as any).flat();
//   const values = pitches.map((p, i) => ({
//     pitch: p,
//     time: time + interval * i,
//   }));

//   values.forEach(({ pitch, time }) => {
//     synth.triggerAttackRelease(pitch, '8n', time);
//   });
// };

// const part1 = new Tone.Part(simple, [['0:0:0', ['C#3', 'Eb3', 'G3']]]).start(0);
// const part2 = new Tone.Part(strum, [['0:0:0', ['C#3', 'Eb3', 'G3']]]).start(
//   '1m'
// );

// const part3 = new Tone.Part(strum, [['0:0:0', ['C#3', 'Eb3', 'G3']]]).start(
//   '2m'
// );

// const part4 = new Tone.Part(strum, [['0:0:0', ['C#3', 'Eb3', 'G3']]]).start(
//   '3m'
// );

// var metronome = new Tone.Part(
//   (time, pitch) => {
//     synth.triggerAttackRelease(pitch, '8n', time);
//   },
//   [
//     ['0', 'D2'],
//     ['0:1', 'D1'],
//     ['0:2', 'D1'],
//     ['0:3', 'D1'],
//   ]
// );

// metronome.loop = true;
// metronome.loopStart = 0;
// metronome.loopEnd = '1:0';

// metronome.start(0);

// Tone.Transport.loop = true;
// Tone.Transport.loopStart = 0;
// Tone.Transport.loopEnd = '4:0:0';

// const toggleMetronome = () => {
//   if (metronome.mute) {
//     metronome.mute = false;
//   } else {
//     metronome.mute = true;
//   }
// };

// const Toner: React.FC<{ droppedAudioUrl?: string }> = ({ droppedAudioUrl }) => {
//   return (
//     <div className="App">
//       <button onClick={change}>Change run-time pattern</button>
//       <button onClick={() => Tone.start()}>Start audio</button>
//       <button
//         onClick={() => {
//           if (Tone.Transport.state === 'started') {
//             Tone.Transport.stop();
//           } else {
//             Tone.Transport.start('+0.1');
//           }
//         }}
//       >
//         Start
//       </button>
//       <button onClick={toggleMetronome}>Metronome</button>
//     </div>
//   );
// };

// export default Toner;
